# this config file includes many more customization options than configs
# this is the configuration I use on a daily basis while developing
# SSL-EL robots for Carrossel-Caipira on the repository at https://github.com/carrossel-caipira/SSL-EL 
# it includes cool possibilities, like setting custom binds and running commands only if in certain branches 

rename-window 'nvim' # window 0: nvim
new-window -n 'git' # window 1: git
new-window -n 'build' # window 2: build
new-window -n 'node' 'exec bash -c "source install/setup.bash; exec fish"' # window 3: node

# custom remap for this specific session
bind-key b send-keys -t 'build' 'colcon build --cmake-args -DCMAKE_EXPORT_COMPILE_COMMANDS=ON' C-m 
bind-key -n M-b send-keys -t 'build' 'colcon build --cmake-args -DCMAKE_EXPORT_COMPILE_COMMANDS=ON' C-m 

# create custom windows for git branches
if-shell -b 'git rev-parse --abbrev-ref HEAD 2>/dev/null | grep -q communication' {
    new-window -n 'grSim'
    new-window -n 'topics' 'exec bash -c "source install/setup.bash; exec fish"'
}


if-shell -b 'git rev-parse --abbrev-ref HEAD 2>/dev/null | grep -q "strategy_refactor"' {
    new-window -n 'old' -c ~/projects/SSL-EL-2024
    send-keys -t 'old' 'nvim' C-m
}

if-shell -b 'git rev-parse --abbrev-ref HEAD 2>/dev/null | grep -q "inverse_kinematics"' {
    rename-window -t 'node' 'grSim'
    send-keys -t 'grSim' 'grSim' C-m
    new-window -n 'vision' 'exec bash -c "source install/setup.bash; exec fish"'
    send-keys -t 'vision' 'ros2 run vision vision_node --ros-args -p framerate:=500'
    new-window -n 'strat' 'exec bash -c "source install/setup.bash; exec fish"'
    send-keys -t 'strat' 'ros2 run strategy Strategy'
    new-window -n 'cntrl' 'exec bash -c "source install/setup.bash; exec fish"'
    send-keys -t 'cntrl' 'ros2 run controller controller_node --ros-args -p verbose:=true'
    new-window -n 'commu' 'exec bash -c "source install/setup.bash; exec fish"'
    send-keys -t 'commu' 'ros2 run communication grSim_communication_node --ros-args -p framerate:=500'
}

select-window -t 'nvim'
send-keys -t 'nvim' 'nvim' C-m

